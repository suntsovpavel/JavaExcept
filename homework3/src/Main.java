//Урок 3. Продвинутая работа с исключениями в Java
//        Напишите приложение, которое будет запрашивать у пользователя
//        следующие данные в произвольном порядке (4 строки):
//        - Фамилия Имя Отчество: строка, содержащая 2 пробела
//        - датарождения, формат dd.mm.yyyy
//        - номер телефона: беззнаковое число тип int
//        - пол (f либо m)
//
//        Форматы данных:
//        фамилия, имя, отчество - строки
//        датарождения - строка формата dd.mm.yyyy
//        номертелефона - целое беззнаковое число без форматирования
//        пол - символ латиницей f или m.
//
//        Приложение должно проверить введенные данные по количеству.
//        Если количество не совпадает с требуемым, вернуть код ошибки,
//        обработать его и показать пользователю сообщение,
//        что он ввел меньше и больше данных, чем требуется.
//
//        Приложение должно попытаться распарсить полученные значения
//        и выделить из них требуемые параметры.
//        Если форматы данных не совпадают, нужно бросить исключение,
//        соответствующее типу проблемы.
//        Можно использовать встроенные типы java и создать свои.
//        Исключение должно быть корректно обработано,
//        пользователю выведено сообщение с информацией, что именно неверно.
//
//        Если всё введено и обработано верно, должен создаться файл с названием,
//        равным фамилии, в него в одну строку должны записаться полученные данные, вида
//
//    <Фамилия><Имя><Отчество><датарождения> <номертелефона><пол>
//
//Однофамильцы должны записаться в один и тот же файл, в отдельные строки.
//        Не забудьте закрыть соединение с файлом.
//        При возникновении проблемы с чтением-записью в файл,
//        исключение должно быть корректно обработано, пользователь должен увидеть стектрейс ошибки.

import workWithUser.DataHuman;
import workWithUser.MissingDataException;
import workWithUser.WorkWithUser;

import java.io.IOException;

public class Main {
    public static void main(String[] args) {
        try{
            //Получаем данные от пользователя
            WorkWithUser workWithUser = new WorkWithUser();
            DataHuman dataHuman = workWithUser.getData();

            //Записываем полученные данные в файл
            // Если файл с фамилией уже существует, дописываем даанные в него
            //Если в файле уже имеется строка с такими данными, кидаем исключение MyExceptionDuplicateData
            WorkWithFiles workWithFiles = new WorkWithFiles();
            System.out.println(workWithFiles.writeToFile(dataHuman));
        }
        catch(IOException e) {
            System.out.println("caught IOException: " + e);
        }
        catch(MissingDataException e){
            System.out.println(e);
        }
        catch(MyExceptionDuplicateData e){
            System.out.println(e);
        }
        catch(Exception e){
            System.out.println("Что-то пошло не так...");
        }
    }
}